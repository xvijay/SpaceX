{"version":3,"sources":["Card/index.js","Mission/index.js","Extra/Spinner/index.js","Launchpad/index.js","Payload/index.js","Main/index.js","Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["CardComponent","props","Card","key","id","Header","name","Body","children","Mission","Container","style","marginTop","Row","data","map","item","index","Col","xs","md","sm","lg","mission_name","className","fontSize","description","payload_ids","element","title","to","Loader","Spinner","animation","variant","LaunchpadPage","state","allStatus","selectStatus","updateContent","e","target","value","launchData","filter","status","setState","this","Set","Fragment","Form","Group","as","controlId","Label","column","color","Control","onChange","s","l","Badge","pill","float","site_id","ListGroup","Item","fontWeight","location","region","latitude","longitude","details","React","Component","PayloadClass","axios","get","match","params","then","res","console","log","payloadData","catch","error","alert","span","offset","payload_type","manufacturer","nationality","customers","length","join","norad_id","orbit","payload_mass_kg","payload_mass_lbs","margin","orbit_params","Object","keys","charAt","toUpperCase","slice","split","Space","missionData","path","render","Launchpad","Payload","Jumbotron","src","alt","width","fontFamily","marginLeft","App","Navbar","collapseOnSelect","expand","bg","Brand","href","height","Toggle","aria-controls","Collapse","Nav","Link","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90021ea3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst CardComponent = props => {\r\n  return (\r\n    <Card key={props.id}>\r\n      <Card.Header>{props.name}</Card.Header>\r\n      <Card.Body id=\"style-1\">{props.children}</Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CardComponent from \"../Card\";\r\n\r\nconst Mission = props => {\r\n  return (\r\n    <Container style={{ marginTop: \"2%\" }}>\r\n      <Row>\r\n        {props.data.map((item, index) => {\r\n          return (\r\n            <Col xs={12} md={6} sm={6} lg={4} key={index}>\r\n              <CardComponent id={item.id} name={item.mission_name}>\r\n                <blockquote className=\"blockquote mb-0\">\r\n                  <p style={{ fontSize: \"0.9rem\" }}> {item.description} </p>\r\n                  <strong>Pay Load Id</strong>\r\n\r\n                  {item.payload_ids.map((element, index) => (\r\n                    <footer className=\"blockquote-footer\" key={index}>\r\n                      <cite title=\"Source Title\">\r\n                        <Link to={`/payload/${element}`}>{element}</Link>\r\n                      </cite>\r\n                    </footer>\r\n                  ))}\r\n                </blockquote>\r\n              </CardComponent>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Mission;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"centerDiv\">\r\n    <Spinner animation=\"grow\" variant=\"primary\" />\r\n    <Spinner animation=\"grow\" variant=\"secondary\" />\r\n    <Spinner animation=\"grow\" variant=\"success\" />\r\n    <Spinner animation=\"grow\" variant=\"danger\" />\r\n    <Spinner animation=\"grow\" variant=\"warning\" />\r\n    <Spinner animation=\"grow\" variant=\"info\" />\r\n    <Spinner animation=\"grow\" variant=\"light\" />\r\n    <Spinner animation=\"grow\" variant=\"dark\" />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Badge,\r\n  Form\r\n} from \"react-bootstrap\";\r\n\r\nclass LaunchpadPage extends React.Component {\r\n  state = {\r\n    allStatus: [],\r\n    selectStatus: \"\"\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      allStatus: [...new Set(this.props.launchData.map(item => item.status))],\r\n      launchData: this.props.launchData\r\n    });\r\n  }\r\n  updateContent = e => {\r\n    let selectStatus = e.target.value;\r\n    let data = [...this.props.launchData];\r\n    if (selectStatus !== \"0\") {\r\n      data = data.filter(item => item.status === selectStatus);\r\n    }\r\n    this.setState({ launchData: data });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Row>\r\n          <Col xs={12} md={4}>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"3\">\r\n                <span style={{ color: \"white\" }}>Select Status</span>\r\n              </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control as=\"select\" onChange={e => this.updateContent(e)}>\r\n                  {this.props.launchData ? (\r\n                    this.state.allStatus.map(item => (\r\n                      <option key={item} value={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))\r\n                  ) : (\r\n                    <option>...</option>\r\n                  )}\r\n                  <option key={0} value={0}>\r\n                    All\r\n                  </option>\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        {this.state.launchData ? (\r\n          <Container style={{ marginTop: \"2%\" }}>\r\n            <Row>\r\n              {this.state.launchData.map((item, index) => {\r\n                return (\r\n                  <Col xs={12} md={4} s={6} l={4} key={index}>\r\n                    <Card key={item.id}>\r\n                      <Card.Header>\r\n                        <Badge\r\n                          pill\r\n                          variant={\r\n                            item.status === \"active\"\r\n                              ? \"success\"\r\n                              : item.status === \"retired\"\r\n                              ? \"info\"\r\n                              : item.status === \"under construction\"\r\n                              ? \"warning\"\r\n                              : \"danger\"\r\n                          }\r\n                          style={{ float: \"left\", color: \"transparent\" }}\r\n                        >\r\n                          .\r\n                        </Badge>\r\n                        {item.site_id}\r\n                      </Card.Header>\r\n                      <Card.Body id=\"style-1\">\r\n                        <blockquote className=\"blockquote mb-0\">\r\n                          {/* <p style={{ fontSize: \"0.9rem\" }}> */}\r\n                          <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                              <span style={{ fontWeight: \"bold\" }}>\r\n                                Location:\r\n                              </span>{\" \"}\r\n                              {item.location.name}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <span style={{ fontWeight: \"bold\" }}>Regin:</span>{\" \"}\r\n                              {item.location.region}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <span style={{ fontWeight: \"bold\" }}>\r\n                                Coordinates:\r\n                              </span>{\" \"}\r\n                              {item.location.latitude}/{item.location.longitude}\r\n                            </ListGroup.Item>\r\n                            {/* <ListGroup.Item></ListGroup.Item> */}\r\n                          </ListGroup>\r\n                          <p style={{ fontSize: \"0.9rem\", marginTop: \"10%\" }}>\r\n                            {\" \"}\r\n                            {item.details}{\" \"}\r\n                          </p>\r\n                        </blockquote>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Container>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaunchpadPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\n\r\nimport CardComponent from \"../Card\";\r\n\r\nclass PayloadClass extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://api.spacexdata.com/v3/payloads/${this.props.match.params.id}`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({ payloadData: res.data });\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"Cannot See PayLod now, due to some technical issues\");\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2%\" }}>\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <CardComponent id={1} name={this.props.match.params.id}>\r\n              {this.state.payloadData ? (\r\n                <React.Fragment>\r\n                  <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Type</td>\r\n                        <td>{this.state.payloadData.payload_type}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Manufacturer</td>\r\n                        <td>{this.state.payloadData.manufacturer}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Nationality</td>\r\n                        <td>{this.state.payloadData.nationality}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Customers</td>\r\n                        <td>\r\n                          {!!this.state.payloadData.customers &&\r\n                          this.state.payloadData.customers.length\r\n                            ? this.state.payloadData.customers.join(\", \")\r\n                            : \"\"}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Norad Id</td>\r\n                        <td>\r\n                          {!!this.state.payloadData.norad_id &&\r\n                          this.state.payloadData.norad_id.length\r\n                            ? this.state.payloadData.norad_id.join(\", \")\r\n                            : \"\"}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Orbit</td>\r\n                        <td>{this.state.payloadData.orbit}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Payload Mass Kg</td>\r\n                        <td>{this.state.payloadData.payload_mass_kg}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Payload Mass lbs</td>\r\n                        <td>{this.state.payloadData.payload_mass_lbs}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  <div\r\n                    className=\"card-small-title m-tb-25 \"\r\n                    style={{ margin: \"5% 0\", fontSize: \"1.2rem\" }}\r\n                  >\r\n                    Orbit params\r\n                  </div>\r\n                  <table>\r\n                    <tbody>\r\n                      {this.state.payloadData.orbit_params\r\n                        ? Object.keys(this.state.payloadData.orbit_params).map(\r\n                            (key, index) => (\r\n                              <tr key={index}>\r\n                                <td>\r\n                                  {(key.charAt(0).toUpperCase() + key.slice(1))\r\n                                    .split(\"_\")\r\n                                    .join(\" \")}\r\n                                </td>\r\n                                <td>\r\n                                  {this.state.payloadData.orbit_params[key]}\r\n                                </td>\r\n                              </tr>\r\n                            )\r\n                          )\r\n                        : null}\r\n                    </tbody>\r\n                  </table>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"Loading\"\r\n              )}\r\n            </CardComponent>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PayloadClass;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Mission from \"../Mission\";\r\nimport { Loader } from \"../Extra/Spinner\";\r\nimport LaunchpadPage from \"../Launchpad\";\r\nimport PayloadClass from \"../Payload\";\r\n\r\nclass Space extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    // let thisSTATE = this.state.data;\r\n\r\n    axios\r\n      .get(\"https://api.spacexdata.com/v3/missions\")\r\n      .then(res => {\r\n        this.setState({ missionData: res.data });\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"Cannot See Mission now, due to some technical issues\");\r\n      });\r\n\r\n    axios\r\n      .get(\"https://api.spacexdata.com/v3/launchpads\")\r\n      .then(res => {\r\n        this.setState({ launchData: res.data });\r\n      })\r\n      .catch(function(error) {\r\n        alert(\"Cannot See launch pad now, due to some technical issues\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        {this.state.missionData ? (\r\n          <Route\r\n            path=\"/mission\"\r\n            render={props => (\r\n              <Mission {...props} data={this.state.missionData}></Mission>\r\n            )}\r\n          ></Route>\r\n        ) : (\r\n          <Loader></Loader>\r\n        )}\r\n        {this.state.launchData ? (\r\n          <Route\r\n            path=\"/launchpad\"\r\n            render={props => (\r\n              <LaunchpadPage\r\n                {...props}\r\n                launchData={this.state.launchData}\r\n              ></LaunchpadPage>\r\n            )}\r\n          ></Route>\r\n        ) : (\r\n          <Loader></Loader>\r\n        )}\r\n        <Route\r\n          path=\"/payload/:id?\"\r\n          render={props => <PayloadClass {...props}></PayloadClass>}\r\n        ></Route>\r\n\r\n        <Route path=\"/\">\r\n          <Jumbotron className=\"centerDivJumbo\">\r\n            <img\r\n              src=\"https://www.spacex.com/sites/spacex/files/spacex_logo_white.png\"\r\n              alt=\"Home\"\r\n              width=\"30%\"\r\n            ></img>\r\n            <p\r\n              style={{\r\n                marginTop: \"2%\",\r\n                fontFamily: \"'Alatsi', sans-serif\",\r\n                marginLeft: \"-3%\"\r\n              }}\r\n            >\r\n              Application that provides information about SpaceX resources\r\n            </p>\r\n          </Jumbotron>\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Space;\r\n","import React from \"react\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport Space from \"../Main\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n        <Navbar.Brand href=\"#/\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/startup.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"}\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#/mission\">Mission</Nav.Link>\r\n            <Nav.Link href=\"#/launchpad\">Launch Pad</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Space></Space>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Layout from \"./Layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout></Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}